<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User List</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <script>
        function createTable(users) {

            const tableBody = document.getElementById('user-table-body');
            tableBody.innerHTML = '';

            users.forEach(user => {
                const row = document.createElement('tr');

                row.innerHTML = `
        <td>${user.id}</td>
        <td>${user.name}</td>
        <td>${user.email}</td>
        <td>${user.username}</td>
        <td>${user.roles.map(role => role.roleName).join(', ')}</td>
        <td>
            <button type="button" class="btn bg-info text-white edit-button" data-id="${user.id}">
                Edit
            </button>
        </td>
        <td>
            <button type="button" class="btn bg-danger text-white delete-button" data-id="${user.id}">
                Delete
            </button>
        </td>
    `;

                tableBody.appendChild(row);
            });

            document.querySelectorAll('.edit-button').forEach(button => {
                button.addEventListener('click', function () {
                    const userId = this.getAttribute('data-id');
                    openEditModal(userId);
                });
            });
            document.querySelectorAll('.delete-button').forEach(button => {
                button.addEventListener('click', function () {
                    const userId = this.getAttribute('data-id');
                    openDeleteModal(userId);
                });
            });
        }

        function loadUsers() {
            fetch('/admin/rest/')
                .then(response => response.json())
                .then(users => {
                    createTable(users);
                })
                .catch(error => {
                    console.error('Ошибка при получении данных:', error);
                });
        }

        document.addEventListener('DOMContentLoaded', () => {
            loadUsers();
            loadCurrentUser();
        });

        function updateUsers() {
            loadUsers();
        }

        async function loadCurrentUser() {
            try {
                const response = await fetch('/user/rest/');
                if (!response.ok) {
                    throw new Error('Ошибка при получении данных пользователя');
                }
                const currentUser = await response.json();

                document.getElementById('user-info').textContent = `${currentUser.email} with roles: ${currentUser.roles.map(role => role.roleName).join(', ')}`;

                createCurrentUserTable(currentUser);
            } catch (error) {
                console.error('Произошла ошибка:', error);
            }
        }

        function createCurrentUserTable(user) {
            const tableBody = document.getElementById('current-user-table-body');

            tableBody.innerHTML = '';

            const row = document.createElement('tr');
            row.innerHTML = `
    <td>${user.id}</td>
    <td>${user.name}</td>
    <td>${user.email}</td>
    <td>${user.username}</td>
    <td>${user.roles.map(role => role.roleName).join(', ')}</td>
`;

            tableBody.appendChild(row);
        }

        document.addEventListener('DOMContentLoaded', () => {
            loadCurrentUser();
        });
    </script>
</head>
<body>
<nav class="navbar navbar-expand-xl navbar-dark bg-dark text-white">
    <div class="container-fluid">
        <span id="user-info"></span>

        <div class="d-flex ms-auto">
            <form th:action="@{/logout}" method="post">
                <button type="submit" class="btn btn-light" style="margin-right: 10px;">Logout</button>
            </form>
        </div>
    </div>
</nav>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 col-lg-2 d-md-block bg-light sidebar">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav flex-column nav-pills me-3">
                        <a class="nav-link active" id="v-pills-home-tab" data-toggle="pill" href="#v-pills-home"
                           role="tab" aria-controls="v-pills-home" aria-selected="true">Admin</a>
                        <a class="nav-link" id="v-pills-profile-tab" data-toggle="pill" href="#v-pills-profile"
                           role="tab" aria-controls="v-pills-profile" aria-selected="false">User</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="col-md-9">
            <div class="tab-content" id="v-pills-tabContent">
                <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel"
                     aria-labelledby="v-pills-home-tab">
                    <h1>Admin Panel</h1>
                    <div class="card">
                        <div class="card-header">
                            <ul class="nav nav-tabs card-header-tabs" id="myTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab"
                                       aria-controls="home" aria-selected="true">Users table</a>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab"
                                       aria-controls="profile" aria-selected="false">New User</a>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body">
                            <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade show active" id="home" role="tabpanel"
                                     aria-labelledby="home-tab">
                                    <h1>All Users</h1>
                                    <table class="table table-striped">
                                        <thead>
                                        <tr>
                                            <th scope="col">ID</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Email</th>
                                            <th scope="col">Username</th>
                                            <th scope="col">Roles</th>
                                        </tr>
                                        </thead>
                                        <tbody id="user-table-body">
                                        </tbody>
                                    </table>
                                </div>
                                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                                    <form id="userForm">
                                        <h3>Add new user</h3>
                                        <input type="hidden" id="userId"/>

                                        <div class="mb-3 form-group-center">
                                            <label for="setUserName" class="form-label text-center-custom"
                                                   style="font-weight: bold;">Name</label>
                                            <input type="text" class="form-control custom-width" id="setUserName"
                                                   name="name" placeholder="Name">
                                        </div>

                                        <div class="mb-3 form-group-center">
                                            <label for="setUserUsername" class="form-label text-center-custom"
                                                   style="font-weight: bold;">Username</label>
                                            <input type="text" class="form-control custom-width" id="setUserUsername"
                                                   name="username" placeholder="UserName">
                                        </div>

                                        <div class="mb-3 form-group-center">
                                            <label for="setUserEmail" class="form-label text-center-custom"
                                                   style="font-weight: bold;">Email</label>
                                            <input type="text" class="form-control custom-width" id="setUserEmail"
                                                   name="email" placeholder="Email">
                                        </div>

                                        <div class="mb-3 form-group-center">
                                            <label for="setUserPassword" class="form-label text-center-custom"
                                                   style="font-weight: bold;">Password</label>
                                            <input type="password" class="form-control custom-width"
                                                   id="setUserPassword" name="password" placeholder="Password">
                                        </div>

                                        <div class="mb-3 form-group-center">
                                            <label for="setUserRole" class="form-label text-center-custom" style="font-weight: bold;">Role (hold Ctrl or Cmd to select multiple)</label>
                                            <select class="form-select" id="setUserRole" name="roles" multiple>
                                                <option value="USER">USER</option>
                                                <option value="ADMIN">ADMIN</option>
                                            </select>
                                        </div>


                                        <div class="d-flex justify-content-center">
                                            <button type="submit" class="btn btn-success">Add new user</button>
                                        </div>
                                    </form>

                                    <script>
                                        document.addEventListener('DOMContentLoaded', function () {
                                            document.getElementById('userForm').addEventListener('submit', async function (event) {
                                                event.preventDefault();


                                                const user = {
                                                    id: document.getElementById('userId').value,
                                                    name: document.getElementById('setUserName').value,
                                                    username: document.getElementById('setUserUsername').value,
                                                    email: document.getElementById('setUserEmail').value,
                                                    password: document.getElementById('setUserPassword').value,
                                                    roles: [
                                                        {
                                                            roleName: document.getElementById('setUserRole').value
                                                        }
                                                    ]
                                                };

                                                try {
                                                    const response = await fetch('/admin/rest/save', {
                                                        method: 'POST',
                                                        headers: {
                                                            'Content-Type': 'application/json'
                                                        },
                                                        body: JSON.stringify(user)
                                                    });

                                                    if (response.ok) {
                                                        const result = await response.json();

                                                        const targetTab = document.querySelector('#home-tab');
                                                        const bootstrapTab = new bootstrap.Tab(targetTab);

                                                        document.getElementById('userId').value = '';
                                                        document.getElementById('setUserName').value = '';
                                                        document.getElementById('setUserUsername').value = '';
                                                        document.getElementById('setUserEmail').value = '';
                                                        document.getElementById('setUserPassword').value = '';
                                                        document.getElementById('setUserRole').value = 'USER';

                                                        updateUsers();
                                                        bootstrapTab.show();
                                                    } else {
                                                        throw new Error('Ошибка при добавлении пользователя');
                                                    }
                                                } catch (error) {
                                                    console.error('Произошла ошибка:', error);
                                                    alert('Ошибка при добавлении пользователя. Проверьте данные и повторите попытку.');
                                                }
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab">
                    <h1>User information-page</h1>
                    <h2 style="margin: 15px; padding: 10px;">About user</h2>
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Name</th>
                            <th scope="col">Email</th>
                            <th scope="col">UserName</th>
                            <th scope="col">Role</th>
                        </tr>
                        </thead>
                        <tbody id="current-user-table-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId" name="id"/>
                    <div class="mb-3 form-group-center">
                        <label for="editUserIdReadOnly" class="form-label text-center-custom"
                               style="font-weight: bold;">ID</label>
                        <input type="text" class="form-control custom-width" id="editUserIdReadOnly" name="id" readonly>
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="editUserName" class="form-label text-center-custom"
                               style="font-weight: bold;">Name</label>
                        <input type="text" class="form-control custom-width" id="editUserName" name="name"
                               placeholder="Name">
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="editUserUsername" class="form-label text-center-custom" style="font-weight: bold;">Username</label>
                        <input type="text" class="form-control custom-width" id="editUserUsername" name="username"
                               placeholder="Username">
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="editUserEmail" class="form-label text-center-custom" style="font-weight: bold;">Email</label>
                        <input type="text" class="form-control custom-width" id="editUserEmail" name="email"
                               placeholder="Email">
                    </div>
                    <input type="hidden" name="hiddenPassword" id="editUserHiddenPassword"/>
                    <div class="mb-3 form-group-center">
                        <label for="editUserPassword" class="form-label text-center-custom" style="font-weight: bold;">Password</label>
                        <input type="password" class="form-control custom-width" id="editUserPassword" name="password"
                               placeholder="Password">
                    </div>

                    <div class="mb-3 form-group-center"><label for="editUserRole" class="form-label text-center-custom"
                                                               style="font-weight: bold;">Role</label> <select
                            class="form-select" id="editUserRole" name="roles" multiple>
                        <option value="USER">USER</option>
                        <option value="ADMIN">ADMIN</option> <!-- Добавьте другие роли, если нужно -->
                    </select>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="deleteUserForm">
                    <input type="hidden" id="deleteUserId" name="id"/>
                    <div class="mb-3 form-group-center">
                        <label for="deleteUserIdReadOnly" class="form-label text-center-custom"
                               style="font-weight: bold;">ID</label>
                        <input type="text" class="form-control custom-width" id="deleteUserIdReadOnly" name="id"
                               readonly>
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="deleteUserName" class="form-label text-center-custom" style="font-weight: bold;">Name</label>
                        <input type="text" class="form-control custom-width" id="deleteUserName" name="name"
                               placeholder="Name" readonly>
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="deleteUserUsername" class="form-label text-center-custom"
                               style="font-weight: bold;">Username</label>
                        <input type="text" class="form-control custom-width" id="deleteUserUsername" name="username"
                               placeholder="Username" readonly>
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="deleteUserEmail" class="form-label text-center-custom" style="font-weight: bold;">Email</label>
                        <input type="text" class="form-control custom-width" id="deleteUserEmail" name="email"
                               placeholder="Email" readonly>
                    </div>
                    <div class="mb-3 form-group-center">
                        <label for="deleteUserPassword" class="form-label text-center-custom"
                               style="font-weight: bold;">Password</label>
                        <input type="password" class="form-control custom-width" id="deleteUserPassword" name="password"
                               placeholder="Password" readonly>
                    </div>

                    <div class="mb-3 form-group-center">
                        <label for="deleteUserRole" class="form-label text-center-custom" style="font-weight: bold;">Role</label>
                        <input type="text" class="form-control custom-width" id="deleteUserRole" name="role" readonly>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    async function openDeleteModal(userId) {
        try {
            const response = await fetch(`/admin/rest/${userId}`);
            const user = await response.json();

            document.getElementById('deleteUserId').value = user.id;
            document.getElementById('deleteUserIdReadOnly').value = user.id;
            document.getElementById('deleteUserName').value = user.name;
            document.getElementById('deleteUserUsername').value = user.username;
            document.getElementById('deleteUserEmail').value = user.email;
            document.getElementById('deleteUserPassword').value = user.password;
            document.getElementById('deleteUserRole').value = user.roles[0].roleName;

            $('#deleteUserModal').modal('show');
        } catch (error) {
            console.error('Ошибка при получении данных пользователя:', error);
        }
    }

    document.getElementById('deleteUserForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const Id = document.getElementById('deleteUserId').value;

        try {
            const response = await fetch(`/admin/rest/delete/${Id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                $('#deleteUserModal').modal('hide');
                const targetTab = document.querySelector('#home-tab');
                const bootstrapTab = new bootstrap.Tab(targetTab);
                updateUsers();
                bootstrapTab.show();
            } else {
                throw new Error('Ошибка при обновлении пользователя');
            }
        } catch (error) {
            console.error('Ошибка при обновлении пользователя:', error);
            alert('Произошла ошибка. Попробуйте снова.');
        }
    });
</script>


<script>
    async function openEditModal(userId) {
        try {
            const response = await fetch(`/admin/rest/${userId}`);
            const user = await response.json();

            document.getElementById('editUserId').value = user.id;
            document.getElementById('editUserIdReadOnly').value = user.id;
            document.getElementById('editUserName').value = user.name;
            document.getElementById('editUserUsername').value = user.username;
            document.getElementById('editUserEmail').value = user.email;
            document.getElementById('editUserHiddenPassword').value = user.password;
            document.getElementById('editUserRole').value = user.roles[0].roleName;

            $('#editUserModal').modal('show');
        } catch (error) {
            console.error('Ошибка при получении данных пользователя:', error);
        }
    }

    document.getElementById('editUserForm').addEventListener('submit', async function (event) {
        event.preventDefault(); // Предотвращаем стандартное поведение формы

        const updatedUser = {
            id: document.getElementById('editUserId').value,
            name: document.getElementById('editUserName').value,
            username: document.getElementById('editUserUsername').value,
            email: document.getElementById('editUserEmail').value,
            password: document.getElementById('editUserPassword').value,
            roles: [{
                roleName: document.getElementById('editUserRole').value
            }]
        };

        try {
            const response = await fetch(`/admin/rest/save`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedUser)
            });

            if (response.ok) {
                $('#editUserModal').modal('hide');
                updateUsers();
            } else {
                throw new Error('Ошибка при обновлении пользователя');
            }
        } catch (error) {
            console.error('Ошибка при обновлении пользователя:', error);
            alert('Произошла ошибка. Попробуйте снова.');
        }
    });

</script>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

</body>
</html>
